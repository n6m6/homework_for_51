C51 COMPILER V9.00   MAIN                                                                  06/21/2024 15:37:44 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objec
                    -ts\main.obj)

line level    source

   1          #include "reg51.h"
   2          #include "public.h"
   3          #include "stepmotor.h"
   4          #include "key.h"
   5          #include "ired.h"
   6           
   7           
   8          #define SPEEDMAX 1//max speed
   9          #define SPEEDMIN 5//min speed
  10          
  11          
  12          #define SMG_A_DP_PORT P0 //使用宏定义数码管段码口
  13          //共阴极数码管显示 0~F 的段码数据
  14          u8 gsmg_code[17]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};
  15           
  16           
  17          //**********************def of sign
  18          int stepmove=0;//0 for stop,1 for begin
  19          void main()
  20          {       
  21   1              u8 key=0;
  22   1              u8 dir=0;
  23   1              u8 step=0;
  24   1              u8 show_num=0;
  25   1              u8 Remote_control;
  26   1              u8 last_speed = 0;
  27   1              u8 speed=SPEEDMAX;
  28   1              u8 Mode;
  29   1              u8 i = 0;
  30   1              u8 j = 0;
  31   1      
  32   1              ired_init();
  33   1                      
  34   1       
  35   1              while(1)
  36   1              {
  37   2                              Mode = 1;               
  38   2                              Remote_control = 1;
  39   2                              key=key_scan(); //get key_state
  40   2                              if(Mode == 1)
  41   2                              {
  42   3                                      if(gired_data[2] == 0x45 && Remote_control == 1)//start or stop
  43   3                                      {
  44   4                                              Remote_control = 0;
  45   4                                              stepmove=!stepmove;
  46   4                                      }                               
  47   3                                      if(Remote_control == 0 && gired_data[2] != 0x40 && gired_data[2] != 0x43 && gired_data[2] != 0x44       && g
             -ired_data[2] != 0x45)
  48   3                                              Remote_control = 1;
  49   3                                      if(stepmove==1) //start
  50   3                                      {
  51   4                                              step_motor_send_pulse(step++,dir);
  52   4                                              if(step==8)     step=0;
  53   4                                              delay_ms(speed);
C51 COMPILER V9.00   MAIN                                                                  06/21/2024 15:37:44 PAGE 2   

  54   4                                      
  55   4                                              if(gired_data[2] == 0x44 && Remote_control == 1)//turn + to -
  56   4                                              {
  57   5                                                      Remote_control = 0;
  58   5                                                      dir=!dir;               
  59   5                                              }       
  60   4                                              else if (gired_data[2] == 0x43 && Remote_control == 1)//speed up
  61   4                                              {
  62   5      
  63   5                                                      Remote_control = 0;
  64   5                                                      if(speed>SPEEDMAX)
  65   5                                                              speed-=1;
  66   5                                                      
  67   5                                              }
  68   4                                              else if (gired_data[2] == 0x40 && Remote_control == 1)//speed down
  69   4                                              {
  70   5                                                      Remote_control = 0;
  71   5                                                      if(speed<SPEEDMIN) 
  72   5                                                              speed+=1;       
  73   5                                              }
  74   4                                              delay_ms(SPEEDMAX);
  75   4                                              show_num = speed;
  76   4                                      }
  77   3                                      else show_num = 0;
  78   3                              }
  79   2                              else
  80   2                              {
  81   3                                      if(key==KEY1_PRESS)//start or stop
  82   3                                      {
  83   4                                              stepmove=!stepmove;
  84   4                                      }                               
  85   3                              
  86   3                                      if(stepmove==1) //start
  87   3                                      {
  88   4                                              step_motor_send_pulse(step++,dir);
  89   4                                              if(step==8)     step=0;
  90   4                                              delay_ms(speed);
  91   4                                      
  92   4                                              if(key==KEY4_PRESS)//turn + to -
  93   4                                              {
  94   5                                                      dir=!dir;                       
  95   5                                              }       
  96   4                                              else if (key==KEY2_PRESS)//speed up
  97   4                                              {
  98   5                                                      if(speed>SPEEDMAX)
  99   5                                                              speed-=1;
 100   5                                                      
 101   5                                              }
 102   4                                              else if (key==KEY3_PRESS)//speed down
 103   4                                              {
 104   5                                                      if(speed<SPEEDMIN) 
 105   5                                                              speed+=1;       
 106   5                                              }
 107   4                                              else if (key==KEY5_PRESS)//nature
 108   4                                              {
 109   5                                                      last_speed = speed;
 110   5                                                      SMG_A_DP_PORT = ~gsmg_code[6];
 111   5                                                      speed = 1;
 112   5                                                      for(j=1;j<=5;j++)
 113   5                                                      {
 114   6                                                              for(i=0;i<=100;i++)
 115   6                                                              {
C51 COMPILER V9.00   MAIN                                                                  06/21/2024 15:37:44 PAGE 3   

 116   7                                                                      step_motor_send_pulse(step++,dir);
 117   7                                                                      if(step==8)     step=0;
 118   7                                                                      delay_ms(j);
 119   7                                                              }
 120   6                                                      }
 121   5                                                      for(j=5;j>=1;j--)
 122   5                                                      {
 123   6                                                              for(i=0;i<=100;i++)
 124   6                                                              {
 125   7                                                                      step_motor_send_pulse(step++,dir);
 126   7                                                                      if(step==8)     step=0;
 127   7                                                                      delay_ms(j);
 128   7                                                              }
 129   6                                                      }
 130   5                                                      for(j=1;j<=5;j++)
 131   5                                                      {
 132   6                                                              for(i=0;i<=100;i++)
 133   6                                                              {
 134   7                                                                      step_motor_send_pulse(step++,dir);
 135   7                                                                      if(step==8)     step=0;
 136   7                                                                      delay_ms(j);
 137   7                                                              }
 138   6                                                      }
 139   5                                                      for(j=5;j>=1;j--)
 140   5                                                      {
 141   6                                                              for(i=0;i<=100;i++)
 142   6                                                              {
 143   7                                                                      step_motor_send_pulse(step++,dir);
 144   7                                                                      if(step==8)     step=0;
 145   7                                                                      delay_ms(j);
 146   7                                                              }
 147   6                                                      }
 148   5                                                      speed = last_speed;
 149   5                                              }
 150   4                                              delay_ms(SPEEDMAX);
 151   4                                              show_num = speed;
 152   4      
 153   4                                      }
 154   3                                      else show_num = 0;
 155   3                                      
 156   3                              }
 157   2                              SMG_A_DP_PORT = ~gsmg_code[show_num];
 158   2      
 159   2                                      
 160   2              }       //while
 161   1      }//main


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    574    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
